name: RDP with No-IP

on:
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: windows-2022
    timeout-minutes: 360

    steps:
      - name: Configure Core RDP Settings
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0 -Force
          netsh advfirewall firewall add rule name="RDP" dir=in action=allow protocol=TCP localport=3389
          Restart-Service -Name TermService -Force

      # Perbaikan: Mengembalikan password menjadi statis "Qwe123!"
      - name: Create RDP User with Secure Password
        run: |
          $password = "Qwe123!"
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force
          New-LocalUser -Name "RDP" -Password $securePass -AccountNeverExpires
          Add-LocalGroupMember -Group "Administrators" -Member "RDP"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "RDP"
          echo "RDP_PASSWORD=$password" >> $env:GITHUB_ENV

      - name: Install Tailscale
        run: |
          Invoke-WebRequest -Uri "https://pkgs.tailscale.com/stable/tailscale-setup-latest.exe" -OutFile "tailscale_setup.exe"
          Start-Process -FilePath ".\tailscale_setup.exe" -ArgumentList "/S" -Wait

      - name: Establish Tailscale Connection
        run: |
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-runner-$env:GITHUB_RUN_ID
          
          $tsIP = $null; $retries = 0
          while (-not $tsIP -and $retries -lt 12) {
            Start-Sleep -Seconds 5
            $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
            $retries++
          }
          if (-not $tsIP) { Write-Error "Tailscale IP not assigned."; exit 1 }
          echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV
      
      - name: Update No-IP DNS Record
        run: |
          $user = "${{ secrets.NOIP_USER }}"
          $pass = "${{ secrets.NOIP_PASS }}"
          $hostname = "${{ secrets.NOIP_HOSTNAME }}"
          $ip = $env:TAILSCALE_IP
          
          $base64AuthInfo = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes(("{0}:{1}" -f $user, $pass)))
          $headers = @{ "Authorization" = "Basic $base64AuthInfo" }
          $updateUrl = "http://dynupdate.no-ip.com/nic/update?hostname=$hostname&myip=$ip"
          $userAgent = "GitHubActions-RDP/1.0 $user"

          Write-Host "Updating No-IP record for $hostname..."
          $response = Invoke-RestMethod -Uri $updateUrl -Headers $headers -UserAgent $userAgent
          
          if ($response -like "good*" -or $response -like "nochg*") {
            Write-Host "Successfully updated No-IP. Response: $response"
            echo "DDNS_HOSTNAME=$hostname" >> $env:GITHUB_ENV
          } else {
            Write-Error "Failed to update No-IP. Response: $response"; exit 1
          }

      # Perbaikan: Mengubah cara pembuatan pesan untuk mengatasi error PowerShell
      - name: Send Connection Details to Telegram
        if: success()
        run: |
          $bot_token = "${{ secrets.TELEGRAM_BOT_TOKEN }}"
          $chat_id = "${{ secrets.TELEGRAM_CHAT_ID }}"
          $hostname = $env:DDNS_HOSTNAME
          $password = $env:RDP_PASSWORD
          $repo_name = "${{ github.repository }}"
          
          # Menggunakan format "here-string" (@"..."@) yang lebih aman untuk pesan multi-baris
          $message = @"
          ‚úÖ *Sesi RDP Siap Digunakan*
          --------------------------------------
          üñ•Ô∏è *Alamat* : `$hostname`
          üë§ *Username* : `RDP`
          üîë *Password* : `$password`
          --------------------------------------
          Repositori: `$repo_name`
          "@
          
          $telegram_url = "https://api.telegram.org/bot$bot_token/sendMessage"
          $body = @{ chat_id = $chat_id; text = $message; parse_mode = 'Markdown' } | ConvertTo-Json
          
          Invoke-RestMethod -Uri $telegram_url -Method Post -Body $body -ContentType 'application/json'

      - name: Maintain Connection
        run: |
          Write-Host "RDP session is active. Connection details sent to Telegram."
          while ($true) {
            Start-Sleep -Seconds 300
          }
