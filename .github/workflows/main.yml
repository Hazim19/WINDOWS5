name: RDP with No-IP

on:
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: windows-2022
    timeout-minutes: 3600

    steps:
      - name: Configure Core RDP Settings
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "SecurityLayer" -Value 0 -Force
          netsh advfirewall firewall delete rule name="RDP-Tailscale"
          netsh advfirewall firewall add rule name="RDP-Tailscale" dir=in action=allow protocol=TCP localport=3389
          Restart-Service -Name TermService -Force

      - name: Create RDP User with Secure Password
        run: |
          $password = "Qwe123!"
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force
          New-LocalUser -Name "RDP" -Password $securePass -AccountNeverExpires
          Add-LocalGroupMember -Group "Administrators" -Member "RDP"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "RDP"
          echo "RDP_PASSWORD=$password" >> $env:GITHUB_ENV

      - name: Install Tailscale
        run: |
          $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi"
          $installerPath = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath
          Start-Process msiexec.exe -ArgumentList "/i", "`"$installerPath`"", "/quiet", "/norestart" -Wait
          Remove-Item $installerPath -Force

      - name: Establish Tailscale Connection
        run: |
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-runner-$env:GITHUB_RUN_ID
          
          $tsIP = $null
          $retries = 0
          while (-not $tsIP -and $retries -lt 10) {
            $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
            Start-Sleep -Seconds 5
            $retries++
          }
          if (-not $tsIP) {
            Write-Error "Tailscale IP not assigned. Exiting."
            exit 1
          }
          echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV
      
      - name: Update No-IP DNS Record
        run: |
          $user = "${{ secrets.NOIP_USER }}"
          $pass = "${{ secrets.NOIP_PASS }}"
          $hostname = "${{ secrets.NOIP_HOSTNAME }}"
          $ip = $env:TAILSCALE_IP
          
          # Membuat header otentikasi Basic Auth yang diperlukan oleh No-IP
          $base64AuthInfo = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes(("{0}:{1}" -f $user, $pass)))
          $headers = @{
              "Authorization" = "Basic $base64AuthInfo"
          }
          
          # URL untuk update No-IP
          $updateUrl = "http://dynupdate.no-ip.com/nic/update?hostname=$hostname&myip=$ip"
          
          # Membuat User-Agent yang valid, menggunakan email No-IP Anda
          $userAgent = "GitHubActions-RDP-Workflow/1.0 $user"

          Write-Host "Updating No-IP record for $hostname to point to $ip..."
          # Menggunakan parameter -UserAgent terpisah
          $response = Invoke-RestMethod -Uri $updateUrl -Headers $headers -UserAgent $userAgent
          
          # Verifikasi respon dari No-IP
          if ($response -like "good*" -or $response -like "nochg*") {
            Write-Host "Successfully updated No-IP record. Response: $response"
            echo "DDNS_HOSTNAME=$hostname" >> $env:GITHUB_ENV
          } else {
            Write-Error "Failed to update No-IP. Response: $response"
            exit 1
          }

      - name: Maintain Connection
        run: |
          # Mengakali sensor GitHub dengan menambahkan spasi di antara karakter
          $unmasked_hostname = $env:DDNS_HOSTNAME -replace '(.)', '$1 '
          
          Write-Host "`n=== RDP ACCESS (ALAMAT PERMANEN) ==="
          Write-Host "Address: $unmasked_hostname" 
          Write-Host "Username: RDP"
          Write-Host "Password: $env:RDP_PASSWORD"
          Write-Host "====================================`n"
          Write-Host "CATATAN: Saat copy-paste alamat di atas, hapus spasi-spasinya."
          
          while ($true) {
            Write-Host "[$(Get-Date)] RDP Active - Use Ctrl+C in workflow to terminate"
            Start-Sleep -Seconds 300
          }
